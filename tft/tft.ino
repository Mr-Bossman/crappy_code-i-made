 #include "lcdPinControll.h"
#include <avr/pgmspace.h>
#define height 31
#define width 32
union C565 {
  uint16_t dat;
  uint8_t data[2];
  struct {
    unsigned r:5;
    unsigned g:6;
    unsigned b:5;
  }C;
};
static uint8_t rot( uint8_t aByte ){
return ((aByte & 0x80 ? 0x01 : 0) |
       (aByte & 0x40 ? 0x02 : 0) |
       (aByte & 0x20 ? 0x04 : 0) |
       (aByte & 0x10 ? 0x08 : 0) |
       (aByte & 0x08 ? 0x10 : 0) |
       (aByte & 0x04 ? 0x20 : 0) |
       (aByte & 0x02 ? 0x40 : 0) |
       (aByte & 0x01 ? 0x80 : 0));
}
static const uint8_t image[height][width][2]  = {90,203,107,44,115,142,131,239,148,113,164,210,173,84,189,149,8,97,8,98,8,130,189,182,238,251,239,27,239,27,239,27,239,27,239,27,239,27,239,27,230,251,198,23,16,195,8,130,57,232,107,109,173,52,156,178,140,80,131,207,115,109,99,12
,98,235,115,77,123,174,140,48,156,178,165,19,181,117,197,214,25,4,17,4,8,130,41,166,214,153,239,60,239,28,239,28,239,28,239,28,239,28,239,28,239,27,66,73,8,130,25,37,107,76,123,239,181,117,164,243,148,113,132,16,123,142,107,44
,99,12,115,109,131,239,148,113,156,210,173,84,189,182,206,56,74,138,58,8,8,195,8,98,58,40,222,121,197,214,197,247,222,153,222,153,214,88,189,182,173,52,8,130,25,37,49,232,140,48,148,146,189,182,173,19,156,178,140,48,123,207,115,77
,107,44,123,174,140,16,148,145,165,19,181,117,197,215,214,88,107,109,58,73,17,4,8,195,33,101,123,239,132,16,156,178,189,149,189,117,156,178,107,110,82,235,25,37,33,134,132,16,164,243,181,150,197,214,173,84,164,211,148,113,131,239,115,109
,115,77,123,207,140,80,156,178,173,52,189,182,206,23,222,121,148,146,107,109,33,166,17,4,49,231,58,73,148,113,140,81,148,145,140,48,140,48,115,174,66,105,33,166,82,203,164,243,181,84,214,121,198,23,181,149,165,19,156,145,140,16,123,142
,115,109,131,239,148,113,164,243,181,84,197,214,206,56,222,186,197,247,132,16,58,73,90,235,41,166,58,73,156,178,132,48,140,48,123,206,132,16,132,16,82,203,49,231,82,203,140,81,164,243,222,186,206,56,189,182,173,52,156,178,140,48,123,207
,115,142,132,16,148,145,165,19,181,149,197,247,214,89,230,218,230,219,107,109,115,142,91,12,58,40,91,12,140,48,148,113,91,12,99,77,140,80,107,109,82,203,66,138,58,40,99,77,115,207,230,251,214,89,197,214,181,84,164,243,148,113,131,239
,123,174,140,48,156,178,173,52,189,182,206,23,222,153,230,251,239,27,99,77,91,12,74,106,90,236,91,12,107,109,107,77,74,203,82,235,115,142,91,12,99,77,82,235,74,138,82,203,148,113,231,27,222,153,197,247,181,117,165,19,148,145,131,239
,123,207,140,80,156,210,173,84,189,214,214,56,222,186,238,251,230,218,99,44,8,98,16,132,8,33,57,232,82,203,74,138,82,203,82,203,74,170,74,170,139,207,89,70,8,65,16,162,132,15,239,60,222,186,206,23,189,149,173,20,156,178,140,16
,131,207,148,113,164,243,181,117,197,215,214,89,230,218,238,251,214,56,16,131,0,0,0,0,0,33,0,0,66,41,58,40,66,105,66,105,66,106,82,203,120,233,72,66,24,32,0,0,24,195,222,218,230,186,206,56,189,182,173,52,156,178,140,48
,131,239,148,113,164,243,181,117,197,247,214,121,230,219,238,251,140,18,0,0,0,0,8,36,0,3,0,0,41,38,66,73,82,235,66,105,66,105,114,75,160,235,161,43,72,33,8,0,0,0,115,142,230,219,214,88,197,214,173,84,156,210,140,80
,131,239,148,145,165,19,181,149,206,23,222,153,230,251,230,251,82,177,0,69,0,0,16,100,16,75,8,36,24,133,90,236,91,12,107,77,132,16,137,73,168,108,96,35,88,32,56,98,0,0,41,69,230,251,214,89,197,215,181,117,164,242,148,81
,132,16,156,145,173,19,189,150,206,24,222,154,238,251,230,186,49,141,0,73,0,0,0,0,8,5,0,2,16,35,82,139,132,16,164,243,132,48,185,141,160,139,72,34,80,33,8,0,0,0,16,130,214,121,214,121,197,247,181,117,164,243,148,113
,140,16,156,178,173,52,189,182,206,56,222,154,230,251,90,235,24,200,0,4,0,33,0,0,0,2,0,0,0,0,49,199,181,117,197,214,57,199,193,208,128,73,96,37,48,33,16,0,24,33,72,162,107,109,206,24,205,247,181,117,164,243,148,113
,140,16,156,178,173,52,189,182,206,56,222,186,238,251,197,215,41,74,0,1,0,3,0,1,0,33,8,1,16,33,58,8,189,117,189,182,41,134,153,45,136,106,56,33,8,0,16,0,64,35,80,195,107,109,214,89,205,247,181,149,165,19,148,113
,140,16,156,178,173,52,189,182,206,56,222,186,238,251,230,186,74,74,8,34,0,36,0,1,0,0,16,34,32,195,82,203,173,20,181,117,107,77,121,45,152,205,48,1,16,0,0,0,32,34,113,235,230,251,222,153,206,23,181,149,165,19,148,113
,140,16,156,178,173,52,189,182,206,56,222,186,238,251,230,218,123,207,16,132,0,33,0,33,0,34,0,32,41,69,66,73,33,69,41,134,66,73,89,170,169,142,48,35,24,33,0,0,0,0,115,109,230,251,222,153,205,247,181,149,165,19,148,113
,140,16,156,178,173,52,189,182,206,56,222,186,238,251,230,186,156,178,66,41,0,33,0,0,0,0,33,4,58,8,148,146,25,4,24,227,140,48,74,105,137,172,32,35,8,33,0,0,33,36,189,117,230,219,222,121,205,247,181,149,165,19,148,113
,140,16,156,178,173,52,189,182,206,24,222,154,238,251,222,121,148,113,50,8,57,231,41,101,41,101,33,102,132,48,164,243,140,81,107,77,181,117,156,178,41,102,49,38,33,4,41,69,82,203,181,117,222,186,214,121,197,247,181,117,164,243,148,113
,132,16,148,145,173,19,189,150,206,23,222,153,238,251,214,89,123,206,41,167,8,130,8,130,16,195,90,203,148,146,181,85,140,113,99,44,189,182,173,52,82,203,25,37,8,130,25,4,66,106,181,52,214,88,214,121,197,247,181,117,164,243,148,113
,131,239,148,145,165,19,181,149,206,23,222,121,230,251,214,56,74,138,74,170,49,232,8,98,58,8,107,109,156,210,148,178,91,12,58,8,148,146,156,243,156,211,99,44,25,36,25,4,66,73,164,210,206,23,214,88,197,215,181,117,164,210,148,81
,131,239,148,113,164,243,181,117,197,247,214,121,230,219,173,52,66,105,17,4,50,8,66,105,66,105,82,203,115,174,123,207,49,199,41,134,82,171,123,239,99,44,74,106,58,40,82,203,99,77,140,48,197,182,206,56,189,214,173,84,156,210,140,80
,131,207,148,81,164,210,181,85,197,215,214,88,222,186,173,19,66,73,25,69,66,73,82,170,33,101,58,8,74,138,41,134,66,73,50,8,41,102,66,41,49,231,41,134,82,203,91,12,132,16,91,12,164,211,206,23,189,182,173,52,156,178,140,48
,123,174,140,80,156,210,173,84,189,182,206,56,222,121,123,239,66,138,50,8,25,4,33,69,33,69,8,98,16,163,33,101,66,105,49,231,58,41,33,102,16,195,16,195,74,138,91,44,66,105,82,203,189,117,197,247,189,149,165,19,156,145,132,16
,123,174,140,48,156,178,173,52,189,150,206,23,214,88,123,239,82,203,50,8,33,101,0,65,8,130,16,195,8,130,16,227,33,69,33,102,33,134,24,228,8,97,41,199,74,138,41,166,25,69,74,138,107,77,189,182,181,117,164,243,148,113,131,239
,115,142,132,15,148,145,165,19,181,117,197,247,206,56,132,15,82,235,66,105,25,101,16,195,8,162,0,32,0,0,0,0,0,32,0,33,0,33,0,33,25,4,49,199,25,4,8,163,41,199,82,203,148,81,189,149,173,84,164,210,148,81,131,207
,115,109,131,239,148,113,164,210,173,84,189,214,197,247,107,77,82,203,74,138,41,231,25,69,16,195,8,98,0,32,0,0,0,0,0,0,0,0,0,0,0,32,0,65,0,65,8,130,33,134,66,105,123,174,181,84,173,52,156,178,140,48,123,174
,107,77,123,174,140,48,156,178,173,52,189,149,189,182,82,170,74,138,58,73,50,8,33,134,17,4,8,98,0,65,8,98,0,65,0,32,0,32,0,33,0,97,0,97,16,195,33,102,41,166,49,231,66,105,156,178,164,243,148,145,132,16,123,142
,107,44,123,142,132,16,148,145,164,243,181,117,164,211,74,138,66,105,50,8,41,167,33,134,16,227,16,195,8,131,8,98,8,130,0,65,8,98,0,65,0,97,8,195,33,134,41,199,49,231,58,40,74,105,148,113,156,210,148,81,131,239,115,109
,99,12,115,109,131,239,148,81,156,210,173,52,148,113,58,8,66,73,74,138,33,134,33,102,33,101,16,228,25,37,17,4,8,130,8,130,8,98,8,130,8,163,25,69,33,134,41,166,41,166,41,134,41,166,115,109,156,178,140,48,123,174,107,77
,98,235,107,77,123,174,140,16,156,145,164,243,115,142,41,134,41,166,41,199,33,101,25,36,41,199,33,69,16,195,25,37,16,228,16,227,8,163,8,130,17,4,25,101,16,228,16,195,41,166,41,166,49,199,107,77,148,113,131,239,115,142,107,44
};
void setup(){
  lcdPin lcd = lcdPin((const uint8_t[]){2,3,4,5,6,7,8,9},10,11,13,12);

  lcd.commandLCD(0xfe);
  lcd.commandLCD(0xfe);
  lcd.commandLCD(0xef);

  lcd.commandLCD(0xb3);  
  lcd.writeLCD(0x03);
  
  lcd.commandLCD(0xb6);  
  lcd.writeLCD(0x01);
  
  lcd.commandLCD(0xa3);  
  lcd.writeLCD(0x11);
  
  lcd.commandLCD(0x21);
  
  lcd.commandLCD(0x36);  
  lcd.writeLCD(0xd0); //08
  
  lcd.commandLCD(0x3a);  
  lcd.writeLCD(0x05);
  
  lcd.commandLCD(0xb4);  
  lcd.writeLCD(0x21);
  
  
  
  lcd.commandLCD(0xF0);
  lcd.writeLCD(0x31);   
  lcd.writeLCD(0x4C);
  lcd.writeLCD(0x24);   
  lcd.writeLCD(0x58);
  lcd.writeLCD(0xA8);   
  lcd.writeLCD(0x26);
  lcd.writeLCD(0x28);   
  lcd.writeLCD(0x00);
  lcd.writeLCD(0x2C);   
  lcd.writeLCD(0x0C);
  lcd.writeLCD(0x0C);   
  lcd.writeLCD(0x15);
  lcd.writeLCD(0x15);   
  lcd.writeLCD(0x0f); 

  lcd.commandLCD(0xF1);
  lcd.writeLCD(0x0E);  
  lcd.writeLCD(0x2D); 
  lcd.writeLCD(0x24);   
  lcd.writeLCD(0x3E);
  lcd.writeLCD(0x99);   
  lcd.writeLCD(0x12);
  lcd.writeLCD(0x13);   
  lcd.writeLCD(0x00);
  lcd.writeLCD(0x0A);   
  lcd.writeLCD(0x0D);
  lcd.writeLCD(0x0D);   
  lcd.writeLCD(0x14); 
  lcd.writeLCD(0x13);   
  lcd.writeLCD(0x0f);

  lcd.commandLCD(0xfe);
  lcd.commandLCD(0xff);

  lcd.commandLCD(0x11);
  delay(120);
  lcd.commandLCD(0x29);
  lcd.commandLCD(0x2C);
  delay(100);
  for(uint8_t y = 0;y < 160;y++){
      for(uint8_t x = 0;x < 128;x++){
              lcd.writeLCD(0x00);
              lcd.writeLCD(0x00);
      }
  }
  for(uint8_t y = 0;y < 160;y++){
      for(uint8_t x = 0;x < 128;x++){
        if(x>= width || y >= height){
              lcd.writeLCD(0x00);
              lcd.writeLCD(0x00);
        } else{
              lcd.writeLCD(image[y][x][0]);
              lcd.writeLCD(image[y][x][1]);
        }
      }
  }
}

void loop() {}

/*
void Exit_sleep(void)
{
  lcd.commandLCD(0xfe);
        lcd.commandLCD(0xfe);
  lcd.commandLCD(0xef);

  lcd.commandLCD(0x11);
  delay(120) ;
  lcd.commandLCD(0x29);*/
